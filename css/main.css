:root {
  --clr-primary: rgb(54, 112, 199);
  --clr-light: #f4f4f4;
  --clr-dark: #333;
  --clr-warning: rgb(99, 36, 36);
}

*,
*::before,
*::after {
  font-family: inherit;
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: "Work Sans", sans-serif;
  font-weight: 300;
  font-size: 1.5rem;
  background-color: var(--clr-primary);
  color: var(--clr-light);

  display: grid;
  grid:
    "header header header header" auto
    "...... lists  active ......" auto /
    1fr minmax(100px, 300px) minmax(250px, 500px) 1fr;
}

.title {
  grid-area: header;
  text-align: center;
  font-size: calc(7vw + 2rem);
  font-weight: 900;
  color: rgba(0, 0, 0, 0.1);
  letter-spacing: 1px;
  margin: -0.2em 0 0.5em;
}

.all-tasks {
  grid-area: lists;
}

.task-list {
  font-size: 1.2rem;
  line-height: 1.7;
  list-style: circle;
  padding-left: 1.1em;
}

.list-name {
  cursor: pointer;
}

.list-name:hover {
  opacity: 0.7;
}

.active-list {
  font-weight: 700;
}

form {
  display: flex;
}

.btn {
  cursor: pointer;
  background: 0;
  border: 0;
  padding: 0;
  color: inherit;
}

.btn.create {
  font-size: 1.5rem;
  font-weight: 900;
  margin-right: 0.25em;
  transition: opacity 250ms ease-in;
}

.btn.create:hover {
  opacity: 0.7;
}

.new {
  background: transparent;
  border: 0;
  color: inherit;
  border-bottom: 1px solid currentColor;
  font-size: inherit;
  outline: none;
  padding: 0.25em;
  transition: border-bottom 150ms ease-in;
  order: 2; /* with flex, put button before */
}

/* weird necesity */
.new::placeholder {
  color: inherit;
  opacity: 0.4;
}

.new:focus {
  border-width: 3px;
}

.new:focus::placeholder {
  opacity: 0.15;
}

.new.list {
  font-size: 1.2rem;
}

.new.task {
  margin-bottom: 0;
}

.new-task-creator .create {
  color: var(--clr-primary);
}

.todo-list {
  --spacer: 2rem;
  grid-area: active;
  background: var(--clr-light);
  color: var(--clr-dark);
  position: relative;
}

.todo-header {
  padding: var(--spacer);
  background: #e4e4e4;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.list-title {
  margin: 0 1em 0 0; /*right margin to avoid collision*/
}

.task-count {
  margin: 0;
  font-size: 1rem;
}

.todo-body {
  padding: var(--spacer);
  /*position: relative;*/
}

[type="checkbox"] {
  opacity: 0;
  position: absolute;
  /* 
    absolute takes it out of the flow of the doc
    opacity makes it disappear
    better than display: none, because we can still tab and toggle
    */
}

.task label {
  display: inline-flex; /*allow to strike only the label*/
  align-items: center;
  position: relative;
}

.task {
  position: relative;
  margin-bottom: 1.25em;
}

.task::after {
  content: "";
  position: absolute;
  right: 0;
  left: 0;
  bottom: -0.5em;
  height: 1px;
  background: currentColor;
  opacity: 0.2;
}
.custom-checkbox {
  --size: 0.75em;
  display: inline-block;
  width: var(--size);
  height: var(--size);
  margin-right: var(--size);
  cursor: pointer;
  border: 2px solid currentColor;
  border-radius: 50%;
  transform: scale(1);
  transition: transform 300ms ease-in-out;
}

.task:hover .custom-checkbox, 
[type="checkbox"]:focus + label .custom-checkbox /*focus via tab, + is the sibling label*/ {
  transform: scale(1.2);
  color: var(--clr-primary);
}

[type="checkbox"]:checked + label .custom-checkbox {
  background: var(--clr-primary);
  border-color: var(--clr-primary);
  box-shadow: inset 0 0 0 2px white; /* inside and ring (0 2px) */
}

.task label::after {
  content: "";
  position: absolute;
  left: 1.5em;
  right: 0; /*this works with inline-flex to end at the right place*/
  top: calc(50% + 1.5px); /* height/2 */
  height: 3px;
  background: currentColor;
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 150ms ease-in-out;
}

[type="checkbox"]:checked + label::after {
  transform: scaleX(1);
  transform-origin: left; /* see how the transform plays in opposite directions*/
}

.delete-stuff {
  display: flex;
  justify-content: space-evenly;

  position: absolute;
  width: 100%;
  left: 0;
  bottom: -35px;
  color: var(--clr-light);
}

.btn.delete {
  opacity: 0.7;
  font-size: 1rem;
  transition: color 200ms;
}

.btn.delete:hover {
  color: var(--clr-warning);
}
